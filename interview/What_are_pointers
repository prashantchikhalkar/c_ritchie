A pointer is a variable whose value is the address of another variable, 
i.e. direct address of the memory location. 

Like any variable or constant, you must declare a pointer before you can use it to store any variable address. 
The general form of a pointer variable declaration is:

type *var-name;

Here, type is the pointer's base type; 
it must be a valid C data type and var-name is the name of the pointer variable. 
The asterisk * you used to declare a pointer is the same asterisk that you use for multiplication. 
However, in this statement the asterisk is being used to designate a variable as a pointer. 

Following are the valid pointer declaration:

int    *ip;    /* pointer to an integer */
double *dp;    /* pointer to a double */
float  *fp;    /* pointer to a float */
char   *ch     /* pointer to a character */

The actual data type of the value of all pointers, whether integer, float, character, or otherwise, is the same, 
a long hexadecimal number that represents a memory address. 

The only difference between pointers of different data types is the data type of the variable or constant that the pointer points to.
